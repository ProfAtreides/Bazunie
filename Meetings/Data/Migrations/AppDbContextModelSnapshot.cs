// <auto-generated />
using System;
using Meetings.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Meetings.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Meetings.Models.Działy", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idDzialu");

                    b.Property<int>("IdFilii")
                        .HasColumnType("int")
                        .HasColumnName("idFilii");

                    b.Property<string>("NazwaDzialu")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nazwa_Dzialu");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdFilii" }, "FKfk_idFilii");

                    b.HasIndex(new[] { "Id" }, "idDzialu")
                        .IsUnique();

                    b.ToTable("działy", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_polish_ci");
                });

            modelBuilder.Entity("Meetings.Models.Filie", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idFilii");

                    b.Property<string>("NazwaFilii")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nazwa_Filii");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NazwaFilii" }, "nazwa_Filii")
                        .IsUnique();

                    b.ToTable("filie", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_polish_ci");
                });

            modelBuilder.Entity("Meetings.Models.Grafik", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idGrafiku");

                    b.Property<string>("DzienTygodnia")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("dzien_tygodnia");

                    b.Property<TimeOnly?>("GodzinaRozpoczecia")
                        .HasColumnType("time")
                        .HasColumnName("godzina_rozpoczecia");

                    b.Property<TimeOnly?>("GodzinaZakonczenia")
                        .HasColumnType("time")
                        .HasColumnName("godzina_zakonczenia");

                    b.Property<int>("IdPracownika")
                        .HasColumnType("int")
                        .HasColumnName("idPracownika");

                    b.Property<int?>("IloscGodzin")
                        .HasColumnType("int")
                        .HasColumnName("ilosc_godzin");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPracownika" }, "fk_idPracownika");

                    b.ToTable("grafik", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_polish_ci");
                });

            modelBuilder.Entity("Meetings.Models.Pracownicy", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idPracownika");

                    b.Property<bool>("Admin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("admin");

                    b.Property<string>("Haslo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("haslo");

                    b.Property<int>("IdDzialu")
                        .HasColumnType("int")
                        .HasColumnName("idDzialu");

                    b.Property<int>("IdFilii")
                        .HasColumnType("int")
                        .HasColumnName("idFilii");

                    b.Property<string>("ImiePracownika")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("imie_pracownika");

                    b.Property<string>("NazwiskoPracownika")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nazwisko_pracownika");

                    b.Property<string>("Stanowisko")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("stanowisko");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDzialu" }, "fk_dzialy");

                    b.HasIndex(new[] { "IdFilii" }, "idFilii");

                    b.ToTable("pracownicy", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_polish_ci");
                });

            modelBuilder.Entity("Meetings.Models.PracownicyHasSpotkania", b =>
                {
                    b.Property<int>("IdPracownika")
                        .HasColumnType("int")
                        .HasColumnName("idPracownika");

                    b.Property<int>("IdSpotkania")
                        .HasColumnType("int")
                        .HasColumnName("idSpotkania");

                    b.HasIndex(new[] { "IdPracownika" }, "FK_P");

                    b.HasIndex(new[] { "IdSpotkania" }, "FK_S");

                    b.ToTable("pracownicy_has_spotkania", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_polish_ci");
                });

            modelBuilder.Entity("Meetings.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idSali");

                    b.Property<int?>("Pojemnosc")
                        .HasColumnType("int")
                        .HasColumnName("pojemnosc");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("sala", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_polish_ci");
                });

            modelBuilder.Entity("Meetings.Models.Spotkania", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idSpotkania");

                    b.Property<string>("DzienTygodnia")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("dzien_tygodnia");

                    b.Property<TimeOnly?>("GodzinaSpotkania")
                        .HasColumnType("time")
                        .HasColumnName("godzina_spotkania");

                    b.Property<int>("IdFilii")
                        .HasColumnType("int")
                        .HasColumnName("idFilii");

                    b.Property<int>("IdSali")
                        .HasColumnType("int")
                        .HasColumnName("idSali");

                    b.Property<int?>("MaxLiczbaUczestnikow")
                        .HasColumnType("int")
                        .HasColumnName("max_liczba_uczestnikow");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdFilii" }, "fk_idFilii");

                    b.HasIndex(new[] { "IdSali" }, "fk_sala");

                    b.ToTable("spotkania", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_polish_ci");
                });

            modelBuilder.Entity("Meetings.Models.Działy", b =>
                {
                    b.HasOne("Meetings.Models.Filie", "IdFiliiNavigation")
                        .WithMany("Działy")
                        .HasForeignKey("IdFilii")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKfk_idFilii");

                    b.Navigation("IdFiliiNavigation");
                });

            modelBuilder.Entity("Meetings.Models.Grafik", b =>
                {
                    b.HasOne("Meetings.Models.Pracownicy", "IdPracownikaNavigation")
                        .WithMany("Grafik")
                        .HasForeignKey("IdPracownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_idPracownika");

                    b.Navigation("IdPracownikaNavigation");
                });

            modelBuilder.Entity("Meetings.Models.Pracownicy", b =>
                {
                    b.HasOne("Meetings.Models.Działy", "IdDzialuNavigation")
                        .WithMany("Pracownicy")
                        .HasForeignKey("IdDzialu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_dzialy");

                    b.HasOne("Meetings.Models.Filie", "IdFiliiNavigation")
                        .WithMany("Pracownicy")
                        .HasForeignKey("IdFilii")
                        .IsRequired()
                        .HasConstraintName("Pracownicy_ibfk_3");

                    b.Navigation("IdDzialuNavigation");

                    b.Navigation("IdFiliiNavigation");
                });

            modelBuilder.Entity("Meetings.Models.PracownicyHasSpotkania", b =>
                {
                    b.HasOne("Meetings.Models.Pracownicy", "IdPracownikaNavigation")
                        .WithMany()
                        .HasForeignKey("IdPracownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_P");

                    b.HasOne("Meetings.Models.Spotkania", "IdSpotkaniaNavigation")
                        .WithMany()
                        .HasForeignKey("IdSpotkania")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_S");

                    b.Navigation("IdPracownikaNavigation");

                    b.Navigation("IdSpotkaniaNavigation");
                });

            modelBuilder.Entity("Meetings.Models.Spotkania", b =>
                {
                    b.HasOne("Meetings.Models.Filie", "IdFiliiNavigation")
                        .WithMany("Spotkania")
                        .HasForeignKey("IdFilii")
                        .IsRequired()
                        .HasConstraintName("fk_idFilii");

                    b.HasOne("Meetings.Models.Sala", "IdSaliNavigation")
                        .WithMany("Spotkania")
                        .HasForeignKey("IdSali")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sala");

                    b.Navigation("IdFiliiNavigation");

                    b.Navigation("IdSaliNavigation");
                });

            modelBuilder.Entity("Meetings.Models.Działy", b =>
                {
                    b.Navigation("Pracownicy");
                });

            modelBuilder.Entity("Meetings.Models.Filie", b =>
                {
                    b.Navigation("Działy");

                    b.Navigation("Pracownicy");

                    b.Navigation("Spotkania");
                });

            modelBuilder.Entity("Meetings.Models.Pracownicy", b =>
                {
                    b.Navigation("Grafik");
                });

            modelBuilder.Entity("Meetings.Models.Sala", b =>
                {
                    b.Navigation("Spotkania");
                });
#pragma warning restore 612, 618
        }
    }
}
